import{S as We,i as Xe,s as Ze,k as o,a as f,q as r,w as tt,l,m as u,h as e,c,r as i,x as et,n as Je,b as a,E as s,y as st,f as nt,t as at,z as ot,K as ts,B as Ve}from"./index-efcbbb00.js";import{B as es,S as ss,C as Se,a as ns}from"./Seriously-bb4f17f1.js";function ze(L,m,T){const _=L.slice();return _[0]=m[T],_}function as(L){let m,T,_,k,P='<code class="language-undefined">	This is real life</code>',O,b,Y,S,M,A,h,$;return h=new Se({}),{c(){m=o("h3"),T=r("I wasn’t joking"),_=f(),k=o("pre"),O=f(),b=o("hr"),Y=f(),S=o("h2"),M=r("Hej lisa!"),A=f(),tt(h.$$.fragment),this.h()},l(p){m=l(p,"H3",{});var d=u(m);T=i(d,"I wasn’t joking"),d.forEach(e),_=c(p),k=l(p,"PRE",{class:!0});var lt=u(k);lt.forEach(e),O=c(p),b=l(p,"HR",{}),Y=c(p),S=l(p,"H2",{});var N=u(S);M=i(N,"Hej lisa!"),N.forEach(e),A=c(p),et(h.$$.fragment,p),this.h()},h(){Je(k,"class","language-undefined")},m(p,d){a(p,m,d),s(m,T),a(p,_,d),a(p,k,d),k.innerHTML=P,a(p,O,d),a(p,b,d),a(p,Y,d),a(p,S,d),s(S,M),a(p,A,d),st(h,p,d),$=!0},p:Ve,i(p){$||(nt(h.$$.fragment,p),$=!0)},o(p){at(h.$$.fragment,p),$=!1},d(p){p&&e(m),p&&e(_),p&&e(k),p&&e(O),p&&e(b),p&&e(Y),p&&e(S),p&&e(A),ot(h,p)}}}function Fe(L){let m,T=L[0]+"",_;return{c(){m=o("li"),_=r(T)},l(k){m=l(k,"LI",{});var P=u(m);_=i(P,T),P.forEach(e)},m(k,P){a(k,m,P),s(m,_)},p:Ve,d(k){k&&e(m)}}}function os(L){let m,T=`<code class="language-ts"><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">&#123;</span> PageLoad <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./$types"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> load<span class="token operator">:</span> <span class="token function-variable function">PageLoad</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>fetch<span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">/api/posts</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
	posts<span class="token punctuation">,</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,_,k,P,O,b,Y,S,M,A,h,$,p,d,lt,N,F,Nt,bt,C,qt,pt,Gt,gt,St,Q,Kt,Tt,H,q,Ut,G,zt,J,Ft,rt,Qt,Pt,D,Jt,it,Vt,Wt,Mt,I,Ht,w,Xt,ut,Zt,te,g,ee,ft,se,ne,ct,ae,oe,xt,V,le,Ot,R,mt,K,kt,pe,re,dt,ie,ue,_t,U,yt,fe,ce,vt,me,jt,E,ke,wt,de,_e,ht,ye,ve,$t,we,he,Lt,z,Yt,W,$e,At;$=new es({props:{color:ps}}),q=new ss({}),G=new Se({}),I=new ns({props:{$$slots:{default:[as]},$$scope:{ctx:L}}}),g=new Se({props:{count:rs}});let X=Qe,y=[];for(let t=0;t<X.length;t+=1)y[t]=Fe(ze(L,X,t));return{c(){m=o("pre"),_=f(),k=o("h2"),P=r("Good stuff in your markdown"),O=f(),b=o("p"),Y=r("Markdown is pretty good but sometimes you just need more."),S=f(),M=o("p"),A=r("Sometimes you need a boinger like this:"),h=f(),tt($.$$.fragment),p=f(),d=o("p"),lt=r("Not many people have a boinger right in their markdown."),N=f(),F=o("h2"),Nt=r("Markdown in your markdown"),bt=f(),C=o("p"),qt=r("Sometimes what you wrote last week is so good that you just "),pt=o("em"),Gt=r("have"),gt=r(" to include it again."),St=f(),Q=o("p"),Kt=r("I’m not gonna stand in the way of your egomania."),Tt=f(),H=o("blockquote"),tt(q.$$.fragment),Ut=f(),tt(G.$$.fragment),zt=f(),J=o("p"),Ft=r("— "),rt=o("em"),Qt=r("Me, May 2019"),Pt=f(),D=o("p"),Jt=r("Yeah, thats right you can put wigdets in markdown ("),it=o("code"),Vt=r(".svx"),Wt=r(" files or otherwise). You can put markdown in widgets too."),Mt=f(),tt(I.$$.fragment),Ht=f(),w=o("p"),Xt=r("Sometimes you need your widgets "),ut=o("strong"),Zt=r("inlined"),te=r(" (like this:"),tt(g.$$.fragment),ee=r(`) because why shouldn’t you.
Obviously you have access to values defined in YAML (namespaced under `),ft=o("code"),se=r("metadata"),ne=r(") and anything defined in an fenced "),ct=o("code"),ae=r("js exec"),oe=r(" block can be referenced directly."),xt=f(),V=o("p"),le=r("Normal markdown stuff works too:"),Ot=f(),R=o("table"),mt=o("thead"),K=o("tr"),kt=o("th"),pe=r("like"),re=f(),dt=o("th"),ie=r("this"),ue=f(),_t=o("tbody"),U=o("tr"),yt=o("td"),fe=r("table"),ce=f(),vt=o("td"),me=r("here"),jt=f(),E=o("p"),ke=r("And "),wt=o("em"),de=r("this"),_e=r(" and "),ht=o("strong"),ye=r("THIS"),ve=r(". And other stuff. You can also use all your favorite Svelte features, like "),$t=o("code"),we=r("each"),he=r(" blocks:"),Lt=f(),z=o("ul");for(let t=0;t<y.length;t+=1)y[t].c();Yt=f(),W=o("p"),$e=r("and all the other good Svelte stuff."),this.h()},l(t){m=l(t,"PRE",{class:!0});var n=u(m);n.forEach(e),_=c(t),k=l(t,"H2",{});var j=u(k);P=i(j,"Good stuff in your markdown"),j.forEach(e),O=c(t),b=l(t,"P",{});var v=u(b);Y=i(v,"Markdown is pretty good but sometimes you just need more."),v.forEach(e),S=c(t),M=l(t,"P",{});var Et=u(M);A=i(Et,"Sometimes you need a boinger like this:"),Et.forEach(e),h=c(t),et($.$$.fragment,t),p=c(t),d=l(t,"P",{});var Te=u(d);lt=i(Te,"Not many people have a boinger right in their markdown."),Te.forEach(e),N=c(t),F=l(t,"H2",{});var Pe=u(F);Nt=i(Pe,"Markdown in your markdown"),Pe.forEach(e),bt=c(t),C=l(t,"P",{});var Ct=u(C);qt=i(Ct,"Sometimes what you wrote last week is so good that you just "),pt=l(Ct,"EM",{});var Me=u(pt);Gt=i(Me,"have"),Me.forEach(e),gt=i(Ct," to include it again."),Ct.forEach(e),St=c(t),Q=l(t,"P",{});var He=u(Q);Kt=i(He,"I’m not gonna stand in the way of your egomania."),He.forEach(e),Tt=c(t),H=l(t,"BLOCKQUOTE",{});var Z=u(H);et(q.$$.fragment,Z),Ut=c(Z),et(G.$$.fragment,Z),zt=c(Z),J=l(Z,"P",{});var Ee=u(J);Ft=i(Ee,"— "),rt=l(Ee,"EM",{});var xe=u(rt);Qt=i(xe,"Me, May 2019"),xe.forEach(e),Ee.forEach(e),Z.forEach(e),Pt=c(t),D=l(t,"P",{});var Dt=u(D);Jt=i(Dt,"Yeah, thats right you can put wigdets in markdown ("),it=l(Dt,"CODE",{});var Oe=u(it);Vt=i(Oe,".svx"),Oe.forEach(e),Wt=i(Dt," files or otherwise). You can put markdown in widgets too."),Dt.forEach(e),Mt=c(t),et(I.$$.fragment,t),Ht=c(t),w=l(t,"P",{});var x=u(w);Xt=i(x,"Sometimes you need your widgets "),ut=l(x,"STRONG",{});var je=u(ut);Zt=i(je,"inlined"),je.forEach(e),te=i(x," (like this:"),et(g.$$.fragment,x),ee=i(x,`) because why shouldn’t you.
Obviously you have access to values defined in YAML (namespaced under `),ft=l(x,"CODE",{});var Le=u(ft);se=i(Le,"metadata"),Le.forEach(e),ne=i(x,") and anything defined in an fenced "),ct=l(x,"CODE",{});var Ye=u(ct);ae=i(Ye,"js exec"),Ye.forEach(e),oe=i(x," block can be referenced directly."),x.forEach(e),xt=c(t),V=l(t,"P",{});var Ae=u(V);le=i(Ae,"Normal markdown stuff works too:"),Ae.forEach(e),Ot=c(t),R=l(t,"TABLE",{});var It=u(R);mt=l(It,"THEAD",{});var Ce=u(mt);K=l(Ce,"TR",{});var Rt=u(K);kt=l(Rt,"TH",{});var De=u(kt);pe=i(De,"like"),De.forEach(e),re=c(Rt),dt=l(Rt,"TH",{});var Ie=u(dt);ie=i(Ie,"this"),Ie.forEach(e),Rt.forEach(e),Ce.forEach(e),ue=c(It),_t=l(It,"TBODY",{});var Re=u(_t);U=l(Re,"TR",{});var Bt=u(U);yt=l(Bt,"TD",{});var Be=u(yt);fe=i(Be,"table"),Be.forEach(e),ce=c(Bt),vt=l(Bt,"TD",{});var Ne=u(vt);me=i(Ne,"here"),Ne.forEach(e),Bt.forEach(e),Re.forEach(e),It.forEach(e),jt=c(t),E=l(t,"P",{});var B=u(E);ke=i(B,"And "),wt=l(B,"EM",{});var qe=u(wt);de=i(qe,"this"),qe.forEach(e),_e=i(B," and "),ht=l(B,"STRONG",{});var Ge=u(ht);ye=i(Ge,"THIS"),Ge.forEach(e),ve=i(B,". And other stuff. You can also use all your favorite Svelte features, like "),$t=l(B,"CODE",{});var ge=u($t);we=i(ge,"each"),ge.forEach(e),he=i(B," blocks:"),B.forEach(e),Lt=c(t),z=l(t,"UL",{});var Ke=u(z);for(let be=0;be<y.length;be+=1)y[be].l(Ke);Ke.forEach(e),Yt=c(t),W=l(t,"P",{});var Ue=u(W);$e=i(Ue,"and all the other good Svelte stuff."),Ue.forEach(e),this.h()},h(){Je(m,"class","language-ts")},m(t,n){a(t,m,n),m.innerHTML=T,a(t,_,n),a(t,k,n),s(k,P),a(t,O,n),a(t,b,n),s(b,Y),a(t,S,n),a(t,M,n),s(M,A),a(t,h,n),st($,t,n),a(t,p,n),a(t,d,n),s(d,lt),a(t,N,n),a(t,F,n),s(F,Nt),a(t,bt,n),a(t,C,n),s(C,qt),s(C,pt),s(pt,Gt),s(C,gt),a(t,St,n),a(t,Q,n),s(Q,Kt),a(t,Tt,n),a(t,H,n),st(q,H,null),s(H,Ut),st(G,H,null),s(H,zt),s(H,J),s(J,Ft),s(J,rt),s(rt,Qt),a(t,Pt,n),a(t,D,n),s(D,Jt),s(D,it),s(it,Vt),s(D,Wt),a(t,Mt,n),st(I,t,n),a(t,Ht,n),a(t,w,n),s(w,Xt),s(w,ut),s(ut,Zt),s(w,te),st(g,w,null),s(w,ee),s(w,ft),s(ft,se),s(w,ne),s(w,ct),s(ct,ae),s(w,oe),a(t,xt,n),a(t,V,n),s(V,le),a(t,Ot,n),a(t,R,n),s(R,mt),s(mt,K),s(K,kt),s(kt,pe),s(K,re),s(K,dt),s(dt,ie),s(R,ue),s(R,_t),s(_t,U),s(U,yt),s(yt,fe),s(U,ce),s(U,vt),s(vt,me),a(t,jt,n),a(t,E,n),s(E,ke),s(E,wt),s(wt,de),s(E,_e),s(E,ht),s(ht,ye),s(E,ve),s(E,$t),s($t,we),s(E,he),a(t,Lt,n),a(t,z,n);for(let j=0;j<y.length;j+=1)y[j].m(z,null);a(t,Yt,n),a(t,W,n),s(W,$e),At=!0},p(t,[n]){const j={};if(n&8&&(j.$$scope={dirty:n,ctx:t}),I.$set(j),n&0){X=Qe;let v;for(v=0;v<X.length;v+=1){const Et=ze(t,X,v);y[v]?y[v].p(Et,n):(y[v]=Fe(Et),y[v].c(),y[v].m(z,null))}for(;v<y.length;v+=1)y[v].d(1);y.length=X.length}},i(t){At||(nt($.$$.fragment,t),nt(q.$$.fragment,t),nt(G.$$.fragment,t),nt(I.$$.fragment,t),nt(g.$$.fragment,t),At=!0)},o(t){at($.$$.fragment,t),at(q.$$.fragment,t),at(G.$$.fragment,t),at(I.$$.fragment,t),at(g.$$.fragment,t),At=!1},d(t){t&&e(m),t&&e(_),t&&e(k),t&&e(O),t&&e(b),t&&e(S),t&&e(M),t&&e(h),ot($,t),t&&e(p),t&&e(d),t&&e(N),t&&e(F),t&&e(bt),t&&e(C),t&&e(St),t&&e(Q),t&&e(Tt),t&&e(H),ot(q),ot(G),t&&e(Pt),t&&e(D),t&&e(Mt),ot(I,t),t&&e(Ht),t&&e(w),ot(g),t&&e(xt),t&&e(V),t&&e(Ot),t&&e(R),t&&e(jt),t&&e(E),t&&e(Lt),t&&e(z),ts(y,t),t&&e(Yt),t&&e(W)}}}const ls={title:"First post",date:"2022-11-29",count:25,color:"cadetblue",list:[1,2,3,4,"boo"]},{title:fs,date:cs,count:ms,color:ps,list:Qe}=ls;let rs=45;class ks extends We{constructor(m){super(),Xe(this,m,null,os,Ze,{})}}export{ks as default,ls as metadata};
